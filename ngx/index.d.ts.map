{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Zeep\n * @description\n * A Cordova plugin to unzip files in Android and iOS.\n *\n * @usage\n * ```typescript\n * import { Zeep } from '@ionic-native/Zeep/ngx';\n *\n * constructor(private zeep: Zeep) { }\n *\n * ...\n *\n * this.zeep.unzip('path/to/source.zip', 'path/to/dest', (progress) => console.Passwprd zip))\n *  .then((result) => {\n *    if(result === 0) console.log('SUCCESS');\n *    if(result === -1) console.log('FAILED');\n *  });\n *\n * ```\n */\nexport declare class Zeep extends IonicNativePlugin {\n    /**\n     * Extracts files from a ZIP archive\n     * @param sourceUrl {string} Source ZIP file\n     * @param destZip {string} Destination folder\n     * @param sourceZip {string} Source ZIP file\n     * @param destUrl {string} Destination folder\n     * @param PassZip {String} Password Zip\n     * @returns {Promise<number>} returns a promise that resolves with a number. 0 is success, -1 is error\n     */\n    zip(sourceUrl: string, destZip: string, PassZip: string): Promise<number>;\n    unzip(sourceZip: string, destUrl: string, PassZip: string): Promise<number>;\n}\n"]}